<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kabaiye.mapper.ArticleMapper">
    <update id="updateArticle">
        update article
        set original=#{original},
            category_name=#{categoryName},
            category_id=#{categoryId},
            title=#{title},
            summary=#{summary},
            content=#{content},
            html_content=#{htmlContent},
            cover=#{cover},
            status=1,
            reproduce=#{reproduce}
        where id = #{id}
    </update>
    <insert id="addArticle" useGeneratedKeys="true" keyProperty="id">
        insert into
            article(original, user_id, category_name, category_id, title, summary, content,
                    html_content, cover, status, reproduce)
        values
            (#{original},#{userId},#{categoryName},#{categoryId},#{title},#{summary},
             #{content},#{htmlContent},#{cover},1,#{reproduce})
    </insert>

    <resultMap id="infoArticleResMap" type="com.kabaiye.entity.vo.article.InfoArticleRes">
        <id property="id" column="id" />
        <result property="original" column="original" />
        <result property="categoryName" column="categoryName" />
        <result property="categoryId" column="categoryId" />
        <result property="title" column="title" />
        <result property="summary" column="summary" />
        <result property="content" column="content" />
        <result property="htmlContent" column="html_content" />
        <result property="cover" column="cover" />
        <result property="status" column="status" />
        <result property="viewCount" column="view_count" />
        <result property="commentCount" column="comment_count" />
        <result property="likeCount" column="like_count" />
        <result property="collectCount" column="collect_count" />
        <result property="publishTime" column="publish_time" />
        <result property="updateTime" column="update_time" />

        <!-- 处理 user 属性 -->
        <association property="user" javaType="com.kabaiye.entity.vo.user.ArticleUser">
            <id property="userId" column="user_id" />
            <result property="nickname" column="nickname" />
            <result property="avatar" column="avatar" />
        </association>

    </resultMap>

    <!-- @param categoryId 分类id -->
    <!-- @param tagId 标签id -->
    <!-- @param yearMonth 起始月 -->
    <!-- @param nextMonth 终止月 -->
    <!-- @param orderBy 排序依据，默认为 "publish_time" -->
    <!-- @param title 标题 -->
    <select id="selectPageAll" resultMap="infoArticleResMap">
        select a.id,
        a.original,
        a.category_name,
        a.category_id,
        a.title,
        a.summary,
        a.content,
        a.html_content,
        a.cover,
        a.status,
        a.view_count,
        a.comment_count,
        a.like_count,
        a.collect_count,
        a.publish_time,
        a.update_time,
        a.user_id,
        u.nickname,
        u.avatar
        from article a, user u
        where u.id = a.user_id
            <if test="isFront == 1">
                and a.status = 0 and a.deleted = 0
            </if>
            <if test="isFront == 0">
                and a.deleted = 0
            </if>
            <if test="categoryId != null">
                and a.category_id = #{categoryId}
            </if>
            <if test="title != null">
                and a.title like concat('%',#{title},'%')
            </if>
            <if test="yearMonth != null">
                and a.publish_time between #{yearMonth} and #{nextMonth}
            </if>
            <if test="tagId != null">
                and exists( select *
                            from article_tag at
                            where tag_id=#{tagId} and at.article_id = a.id)
            </if>
        order by #{orderBy} desc
    </select>

    <select id="selectDetail" resultMap="infoArticleResMap">
        select a.id,
               a.original,
               a.category_name,
               a.category_id,
               a.title,
               a.summary,
               a.content,
               a.html_content,
               a.cover,
               a.status,
               a.view_count,
               a.comment_count,
               a.like_count,
               a.collect_count,
               a.publish_time,
               a.update_time,
               a.user_id,
               u.nickname,
               u.avatar
        from article a
        join user u on u.id = a.user_id
        where a.id=#{id}
    </select>

    <select id="selectDetailAll" resultMap="infoArticleResMap">
        select a.id,
               a.original,
               a.category_name,
               a.category_id,
               a.title,
               a.summary,
               a.content,
               a.html_content,
               a.cover,
               a.status,
               a.view_count,
               a.comment_count,
               a.like_count,
               a.collect_count,
               a.publish_time,
               a.update_time,
               a.user_id,
               u.nickname,
               u.avatar
        from article a
        join user u on u.id = a.user_id
        where a.id in
        <if test="articleIds != null and articleIds.size > 0">
            <foreach item="item" index="index" collection="articleIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="articleIds == null or articleIds.size == 0">
            ('AnIdThatDoesNotExist')
        </if>
    </select>
</mapper>